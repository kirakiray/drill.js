//! drill.js - v5.3.9 https://github.com/kirakiray/drill.js  (c) 2018-2024 YAO
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).lm=e()}(this,(function(){"use strict";const t="https://ofajs.github.io/ofa-errors/errors",e={};if(globalThis.navigator&&navigator.language){let s=navigator.language.toLowerCase().split("-")[0];"zh"===s&&"zh-cn"!==navigator.language.toLowerCase()&&(s="zhft"),(async()=>{let n;localStorage.getItem("ofa-errors")?n=JSON.parse(localStorage.getItem("ofa-errors")):(n=await fetch(`${t}/${s}.json`).then((t=>t.json())).catch((()=>null)),n?localStorage.setItem("ofa-errors",JSON.stringify(n)):n=await fetch(`${t}/en.json`).then((t=>t.json())).catch((t=>(console.error(t),null)))),Object.assign(e,n)})()}let s=!1;globalThis.navigator&&(s=navigator.userAgent.includes("Safari")&&!navigator.userAgent.includes("Chrome"));const n=(t,e,n)=>{let r,o=a(t,e);return n?(s&&(o+=`\nCaused by: ${n.toString()}\n  ${n.stack.replace(/\n/g,"\n    ")}`),r=new Error(o,{cause:n})):r=new Error(o),r},a=(t,s)=>{if(!e[t])return`Error code: "${t}", please go to https://github.com/ofajs/ofa-errors to view the corresponding error information`;let n=e[t];if(s)for(let t in s)n=n.replace(new RegExp(`{${t}}`,"g"),s[t]);return n};class r{constructor(){this._middlewares=new Map}use(t){const e=Math.random().toString(32).slice(2);return this._middlewares.set(e,t),e}unuse(t){return this._middlewares.delete(t)}async run(t){let e=-1;const s=Array.from(this._middlewares.values()),n=async()=>{e++,e<s.length&&await s[e](t,n)};await n()}}const o=new Map,i=async(t,e)=>{const s=new URL(t),n=e.includes("-direct")?t:`${s.origin}${s.pathname}`;let a=o.get(n);a||(a=fetch(n),o.set(n,a));return(await a).clone()},l={},c=(t,e)=>{(l[t]||(l[t]=new r)).use(e)},u=(t,e)=>{t instanceof Function&&(e=t,t=["js","mjs"]),t instanceof Array?t.forEach((t=>{c(t,e)})):c(t,e)};u(["mjs","js"],(async(t,e)=>{if(!t.result){const{url:e,params:s}=t,a=new URL(e),r=/^blob:/.test(e)||/^data:/.test(e);try{r||s.includes("-direct")?t.result=await import(e):t.result=await import(`${a.origin}${a.pathname}`)}catch(s){const a=n("load_module",{url:t.realUrl||e},s);throw r&&console.log("load failed:",t.realUrl||e," ctx:",t),a}}await e()})),u(["txt","html","htm"],(async(t,e)=>{if(!t.result){const{url:e,params:s}=t;let a;try{a=await i(e,s)}catch(t){throw n("load_fail",{url:e},t)}if(!/^2.{2}$/.test(a.status))throw n("load_fail_status",{url:e,status:a.status});t.result=await a.text()}await e()})),u("json",(async(t,e)=>{if(!t.result){const{url:e,params:s}=t;t.result=await i(e,s).then((t=>t.json()))}await e()})),u("wasm",(async(t,e)=>{if(!t.result){const{url:e,params:s}=t,n=await i(e,s).then((t=>t.arrayBuffer())),a=await WebAssembly.compile(n),r=new WebAssembly.Instance(a);t.result=r.exports}await e()})),u("css",(async(t,e)=>{if(!t.result){const{url:e,element:s,params:n}=t;if(s){const t=document.createElement("link");t.rel="stylesheet",t.href=e;const n=s.getRootNode();let a;n===document?n.head.append(t):n.appendChild(t),s.addEventListener("disconnected",a=e=>{t.remove(),s.removeEventListener("disconnected",a)})}else t.result=await i(e,n).then((t=>t.text()))}await e()}));const d={};const h=(t,e)=>{if(t.startsWith("http://")||t.startsWith("https://"))return t;const[s,...a]=t.split(" ");let r=s;if(/^@/.test(s)){const[e,...a]=s.split("/");if(!d[e])throw n("no_alias",{name:e,url:t});r=[d[e].replace(/\/$/,""),...a].join("/")}if("undefined"!=typeof location){const t=e?new URL(e,location.href):location.href;r=new URL(r,t).href}return a.length?`${r} ${a.join(" ")}`:r},f=Symbol("loaded"),m=async(t,e)=>{const s=new URL(t),{pathname:n}=s;let a,r=null;e.params&&e.params.forEach((t=>{/^\..+/.test(t)?a=t.replace(/^\.(.+)/,"$1"):/^\-\-real/.test(t)&&(r=t.replace(/^\-\-real\:/,""))})),a||(a=n.slice(2+(n.lastIndexOf(".")-1>>>0)));const o={url:t,result:null,realUrl:r,...e},i=l[a];if(i)await i.run(o);else{const e=await fetch(t),s=e.headers.get("Content-Type"),n=[["application/javascript","js"],["application/json","json"],["text/html","html"],["text/xml","xml"]].find((t=>s.includes(t[0])));let a;n&&(a=l[n[1]]),a?await a.run(o):o.result=e}if(e&&e.element){const{element:t}=e;t[f]=!0;const s=new Event("load");t.dispatchEvent(s)}return e.params&&e.params.includes("-ctx")?o:o.result};function p(t,e){return((t,e)=>(t||(t={url:document.location.href}),s=>{let[n,...a]=s.split(" ");const r=h(n,t.url);return m(r,{params:a,...e})}))(t,e)}Object.defineProperties(p,{use:{value:u},alias:{get:()=>({...d})}});class w extends HTMLElement{constructor(...t){super(...t),this[f]=!1,Object.defineProperties(this,{loaded:{get:()=>this[f]}}),this._init()}_init(){if(this.__initSrc||this.attributes.hasOwnProperty("pause"))return;let t=this.getAttribute("src");if(!t)return;this.__initSrc=t;lm(void 0,{element:this})(t),Object.defineProperties(this,{src:{configurable:!0,value:t}})}connectedCallback(){const t=new CustomEvent("connected");t.root=this._root=this.getRootNode(),this.dispatchEvent(t)}disconnectedCallback(){const t=new CustomEvent("disconnected");t.root=this._root,delete this._root,this.dispatchEvent(t)}attributeChangedCallback(t,e,s){"src"===t?s&&null===e?this._init():this.__initSrc&&e&&s!==this.__initSrc&&(console.warn(`${this.tagName.toLowerCase()} change src is invalid, only the first change will be loaded`),this.setAttribute("src",this.__initSrc)):"pause"===t&&null===s&&this._init()}static get observedAttributes(){return["src","pause"]}}class g extends w{constructor(...t){super(...t)}}const b=()=>{customElements.define("load-module",w),customElements.define("l-m",g),window.removeEventListener("load",b)};return"complete"===document.readyState?b():window.addEventListener("load",b),p.config=async function(t){const{alias:e}=t;return e&&Object.entries(e).forEach((([t,e])=>{if(!/^@.+/.test(t))throw n("config_alias_name_error",{name:t});if(d[t])throw n("alias_already",{name:t});if(/^\./.test(e))throw n("alias_relate_name",{name:t,path:e});d[t]=e})),!0},p.path=h,Object.freeze(p),window.lm=p,p}));
//# sourceMappingURL=drill.min.js.map
