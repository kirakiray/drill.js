// drill.js - v5.0.0 https://github.com/kirakiray/drill.js  (c) 2018-2023 YAO
!function(){"use strict";const t=new Map,e={},s=(e,s)=>{e instanceof Array?e.forEach((e=>t.set(e,s))):t.set(e,s)};s(["mjs","js"],(t=>import(t))),s(["txt","html"],(t=>fetch(t).then((t=>t.text())))),s("json",(async t=>fetch(t).then((t=>t.json())))),s("wasm",(async t=>{const e=await fetch(t).then((t=>t.arrayBuffer())),s=await WebAssembly.compile(e);return new WebAssembly.Instance(s).exports}));const n=async(s,n)=>{const r=new URL(s),{pathname:i}=r,c=i.slice(2+(i.lastIndexOf(".")-1>>>0)),o=t.get(c);let a;a=o?await o(s,n):fetch(s);const l=e[c];return l&&l.forEach((t=>{const e=[s];n&&e.push(n),t(...e)})),a};function r(t){return(t=>e=>{let s="";if(t.resolve)s=t.resolve(e);else{const n=new URL(t.url);s=new URL(e,n).href}return n(s)})(t)}Object.assign(r,{setLoader:s,setProcess:(t,s)=>{if(t&&(s=t,t=["js","mjs"]),t instanceof Array)return void t.forEach((t=>{(e[t]||(e[t]=[])).push(s)}));(e[t]||(e[t]=[])).push(s)}});class i extends HTMLElement{constructor(...t){super(...t),this._init()}_init(){if(this.__initSrc)return;let t=this.getAttribute("src");t&&(this.__initSrc=t,t=new URL(t,location.href,t).href,n(t,{element:this}))}attributeChangedCallback(t,e,s){"src"===t&&(s&&null===e?this._init():this.__initSrc&&e&&s!==this.__initSrc&&(console.warn(`${this.tagName.toLowerCase()} change src is invalid, only the first change will be loaded`),this.setAttribute("src",this.__initSrc)))}static get observedAttributes(){return["src"]}}customElements.define("load-module",i),customElements.define("l-m",class extends i{constructor(...t){super(...t)}}),"undefined"!=typeof window&&(window.lm=r),"object"==typeof module&&(module.exports=r)}();