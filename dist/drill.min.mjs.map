{"version":3,"file":"drill.min.mjs","sources":["../src/onion.mjs","../src/use.mjs","../src/main.mjs","../src/component.mjs","../src/base.mjs"],"sourcesContent":["const getOid = () => Math.random().toString(32).slice(2);\n\nexport default class Onion {\n  constructor() {\n    this._middlewares = new Map();\n  }\n\n  use(middleware) {\n    const oid = getOid();\n    this._middlewares.set(oid, middleware);\n    return oid;\n  }\n\n  unuse(oid) {\n    return this._middlewares.delete(oid);\n  }\n\n  async run(context) {\n    let index = -1;\n\n    const middlewares = Array.from(this._middlewares.values());\n\n    const next = async () => {\n      index++;\n      if (index < middlewares.length) {\n        await middlewares[index](context, next);\n      }\n    };\n\n    await next();\n  }\n}\n","import Onion from \"./onion.mjs\";\n\nexport const processor = {};\n\nconst addHandler = (name, handler) => {\n  const oni = processor[name] || (processor[name] = new Onion());\n  oni.use(handler);\n};\n\nexport const use = (name, handler) => {\n  if (name instanceof Function) {\n    handler = name;\n    name = [\"js\", \"mjs\"];\n  }\n\n  if (name instanceof Array) {\n    name.forEach((name) => {\n      addHandler(name, handler);\n    });\n    return;\n  }\n\n  addHandler(name, handler);\n};\n\nuse([\"mjs\", \"js\"], async (ctx, next) => {\n  const { url, params } = ctx;\n  const d = new URL(url);\n  if (params.includes(\"-direct\")) {\n    ctx.result = await import(url);\n  }\n  ctx.result = await import(`${d.origin}${d.pathname}`);\n\n  next();\n});\n\nuse([\"txt\", \"html\"], async (ctx, next) => {\n  const { url } = ctx;\n  ctx.result = await fetch(url).then((e) => e.text());\n\n  next();\n});\n\nuse(\"json\", async (ctx, next) => {\n  const { url } = ctx;\n\n  ctx.result = await fetch(url).then((e) => e.json());\n\n  next();\n});\n\nuse(\"wasm\", async (ctx, next) => {\n  const { url } = ctx;\n\n  const data = await fetch(url).then((e) => e.arrayBuffer());\n\n  const module = await WebAssembly.compile(data);\n  const instance = new WebAssembly.Instance(module);\n\n  ctx.result = instance.exports;\n\n  next();\n});\n","import { processor, use } from \"./use.mjs\";\nexport const LOADED = Symbol(\"loaded\");\n\nconst createLoad = (meta) => {\n  if (!meta) {\n    meta = {\n      url: document.location.href,\n    };\n  }\n  const load = (ourl) => {\n    let reurl = \"\";\n    const [url, ...params] = ourl.split(\" \");\n\n    if (meta.resolve) {\n      reurl = meta.resolve(url);\n    } else {\n      const currentUrl = new URL(meta.url);\n      const resolvedUrl = new URL(url, currentUrl);\n      reurl = resolvedUrl.href;\n    }\n\n    return agent(reurl, { params });\n  };\n  return load;\n};\n\nexport const agent = async (url, opts) => {\n  const urldata = new URL(url);\n  const { pathname } = urldata;\n\n  const type = pathname.slice(((pathname.lastIndexOf(\".\") - 1) >>> 0) + 2);\n\n  const ctx = {\n    url,\n    result: null,\n    ...opts,\n  };\n\n  const oni = processor[type];\n\n  if (oni) {\n    await oni.run(ctx);\n  } else {\n    ctx.result = fetch(url);\n  }\n\n  if (opts && opts.element) {\n    const { element } = opts;\n    element[LOADED] = true;\n    const event = new Event(\"load\");\n    element.dispatchEvent(event);\n  }\n\n  return ctx.result;\n};\n\nexport default function lm(meta) {\n  return createLoad(meta);\n}\n\nObject.assign(lm, {\n  use,\n});\n","import { agent, LOADED } from \"./main.mjs\";\n\nclass LoadModule extends HTMLElement {\n  constructor(...args) {\n    super(...args);\n\n    this[LOADED] = false;\n\n    Object.defineProperties(this, {\n      loaded: {\n        get: () => this[LOADED],\n      },\n    });\n\n    this._init();\n  }\n\n  _init() {\n    if (this.__initSrc || this.attributes.hasOwnProperty(\"pause\")) {\n      return;\n    }\n\n    let src = this.getAttribute(\"src\");\n\n    if (!src) {\n      return;\n      // throw `The ${this.tagName.toLowerCase()} element requires the src attribut `;\n    }\n    this.__initSrc = src;\n\n    src = new URL(src, location.href).href;\n    Object.defineProperties(this, {\n      src: {\n        configurable: true,\n        value: src,\n      },\n    });\n\n    const [url, ...params] = src.split(\" \");\n\n    agent(url, {\n      element: this,\n      params,\n    });\n  }\n\n  connectedCallback() {\n    const event = new CustomEvent(\"connected\");\n    event.root = this._root = this.getRootNode();\n    this.dispatchEvent(event);\n  }\n\n  disconnectedCallback() {\n    const event = new CustomEvent(\"disconnected\");\n    event.root = this._root;\n    delete this._root;\n    this.dispatchEvent(event);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === \"src\") {\n      if (newValue && oldValue === null) {\n        this._init();\n      } else if (this.__initSrc && oldValue && newValue !== this.__initSrc) {\n        console.warn(\n          `${this.tagName.toLowerCase()} change src is invalid, only the first change will be loaded`\n        );\n        this.setAttribute(\"src\", this.__initSrc);\n      }\n    } else if (name === \"pause\" && newValue === null) {\n      this._init();\n    }\n  }\n\n  static get observedAttributes() {\n    return [\"src\", \"pause\"];\n  }\n}\n\nclass LM extends LoadModule {\n  constructor(...args) {\n    super(...args);\n  }\n}\n\nconst ready = () => {\n  customElements.define(\"load-module\", LoadModule);\n  customElements.define(\"l-m\", LM);\n  window.removeEventListener(\"load\", ready);\n};\n\nif (document.readyState === \"complete\") {\n  ready();\n} else {\n  window.addEventListener(\"load\", ready);\n}\n","import lm from \"./main.mjs\";\nimport \"./component.mjs\";\n\nwindow.lm = lm;\n\nexport default lm;\n"],"names":["Onion","constructor","this","_middlewares","Map","use","middleware","oid","Math","random","toString","slice","set","unuse","delete","async","context","index","middlewares","Array","from","values","next","length","processor","addHandler","name","handler","Function","forEach","ctx","url","params","d","URL","includes","result","import","origin","pathname","fetch","then","e","text","json","data","arrayBuffer","module","WebAssembly","compile","instance","Instance","exports","LOADED","Symbol","agent","opts","urldata","type","lastIndexOf","oni","run","element","event","Event","dispatchEvent","lm","meta","document","location","href","ourl","reurl","split","resolve","currentUrl","createLoad","Object","assign","LoadModule","HTMLElement","args","super","defineProperties","loaded","get","_init","__initSrc","attributes","hasOwnProperty","src","getAttribute","configurable","value","connectedCallback","CustomEvent","root","_root","getRootNode","disconnectedCallback","attributeChangedCallback","oldValue","newValue","console","warn","tagName","toLowerCase","setAttribute","observedAttributes","LM","ready","customElements","define","window","removeEventListener","readyState","addEventListener"],"mappings":"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"}