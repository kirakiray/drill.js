//! drill.js - v5.2.3 https://github.com/kirakiray/drill.js  (c) 2018-2023 YAO
class t{constructor(){this._middlewares=new Map}use(t){const e=Math.random().toString(32).slice(2);return this._middlewares.set(e,t),e}unuse(t){return this._middlewares.delete(t)}async run(t){let e=-1;const s=Array.from(this._middlewares.values()),n=async()=>{e++,e<s.length&&await s[e](t,n)};await n()}}const s={},n=(e,n)=>{(s[e]||(s[e]=new t)).use(n)},r=(t,e)=>{t instanceof Function&&(e=t,t=["js","mjs"]),t instanceof Array?t.forEach((t=>{n(t,e)})):n(t,e)};r(["mjs","js"],(async(t,e)=>{if(!t.result){const{url:e,params:s}=t,n=new URL(e),r=/^blob:/.test(e)||/^data:/.test(e);try{r||s.includes("-direct")?t.result=await import(e):t.result=await import(`${n.origin}${n.pathname}`)}catch(t){const s=new Error(`Failed to load module ${r?"":":"+e} \n  ${t.stack}`);throw s.error=t,s}}await e()})),r(["txt","html","htm"],(async(t,s)=>{if(!t.result){const{url:s}=t;let n;try{n=await fetch(s)}catch(t){const e=new Error(`Load ${s} failed \n  ${t.stack}`);throw e.error=t,e}if(!/^2.{2}$/.test(n.status))throw new Error(`Load ${s} failed: status code ${e.status}`);t.result=await n.text()}await s()})),r("json",(async(t,e)=>{if(!t.result){const{url:e}=t;t.result=await fetch(e).then((t=>t.json()))}await e()})),r("wasm",(async(t,e)=>{if(!t.result){const{url:e}=t,s=await fetch(e).then((t=>t.arrayBuffer())),n=await WebAssembly.compile(s),r=new WebAssembly.Instance(n);t.result=r.exports}await e()})),r("css",(async(t,e)=>{if(!t.result){const{url:e,element:s}=t;if(s){const t=document.createElement("link");t.rel="stylesheet",t.href=e;const n=s.getRootNode();let r;n===document?n.head.append(t):n.appendChild(t),s.addEventListener("disconnected",r=e=>{t.remove(),s.removeEventListener("disconnected",r)})}else t.result=await fetch(e).then((t=>t.text()))}await e()}));const a=Symbol("loaded"),i=async(t,e)=>{const n=new URL(t),{pathname:r}=n;let i;e.params&&e.params.forEach((t=>{/^\..+/.test(t)&&(i=t.replace(/^\.(.+)/,"$1"))})),i||(i=r.slice(2+(r.lastIndexOf(".")-1>>>0)));const o={url:t,result:null,...e},c=s[i];if(c?await c.run(o):o.result=fetch(t),e&&e.element){const{element:t}=e;t[a]=!0;const s=new Event("load");t.dispatchEvent(s)}return e.params&&e.params.includes("-ctx")?o:o.result};function o(t){return(t=>(t||(t={url:document.location.href}),e=>{let s="";const[n,...r]=e.split(" ");if(t.resolve)s=t.resolve(n);else{const e=new URL(t.url);s=new URL(n,e).href}return i(s,{params:r})}))(t)}Object.assign(o,{use:r});class c extends HTMLElement{constructor(...t){super(...t),this[a]=!1,Object.defineProperties(this,{loaded:{get:()=>this[a]}}),this._init()}_init(){if(this.__initSrc||this.attributes.hasOwnProperty("pause"))return;let t=this.getAttribute("src");if(!t)return;this.__initSrc=t,t=new URL(t,location.href).href,Object.defineProperties(this,{src:{configurable:!0,value:t}});const[e,...s]=t.split(" ");i(e,{element:this,params:s})}connectedCallback(){const t=new CustomEvent("connected");t.root=this._root=this.getRootNode(),this.dispatchEvent(t)}disconnectedCallback(){const t=new CustomEvent("disconnected");t.root=this._root,delete this._root,this.dispatchEvent(t)}attributeChangedCallback(t,e,s){"src"===t?s&&null===e?this._init():this.__initSrc&&e&&s!==this.__initSrc&&(console.warn(`${this.tagName.toLowerCase()} change src is invalid, only the first change will be loaded`),this.setAttribute("src",this.__initSrc)):"pause"===t&&null===s&&this._init()}static get observedAttributes(){return["src","pause"]}}class l extends c{constructor(...t){super(...t)}}const d=()=>{customElements.define("load-module",c),customElements.define("l-m",l),window.removeEventListener("load",d)};"complete"===document.readyState?d():window.addEventListener("load",d),window.lm=o;export{o as default};
//# sourceMappingURL=drill.min.mjs.map
