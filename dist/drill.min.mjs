//! drill.js - v5.0.3 https://github.com/kirakiray/drill.js  (c) 2018-2023 YAO
const processor={},use=(e,t)=>{if(e instanceof Function&&(t=e,e=["js","mjs"]),e instanceof Array)return void e.forEach((e=>{(processor[e]||(processor[e]=[])).push(t)}));(processor[e]||(processor[e]=[])).push(t)};use(["mjs","js"],(({url:e})=>import(e))),use(["txt","html"],(({url:e})=>fetch(e).then((e=>e.text())))),use("json",(async({url:e})=>fetch(e).then((e=>e.json())))),use("wasm",(async({url:e})=>{const t=await fetch(e).then((e=>e.arrayBuffer())),s=await WebAssembly.compile(t);return new WebAssembly.Instance(s).exports}));const createLoad=e=>{e||(e={url:document.location.href});return t=>{let s="";if(e.resolve)s=e.resolve(t);else{const n=new URL(e.url);s=new URL(t,n).href}return agent(s)}},agent=async(e,t)=>{const s=new URL(e),{pathname:n}=s,r=n.slice(2+(n.lastIndexOf(".")-1>>>0));let o;const i=processor[r];if(i)for(let s of i){const n=await s({url:e,data:o,...t});void 0!==n&&(o=n)}else o=fetch(e);return o};function lm(e){return createLoad(e)}Object.assign(lm,{use:use});class LoadModule extends HTMLElement{constructor(...e){super(...e),this._init()}_init(){if(this.__initSrc||this.attributes.hasOwnProperty("pause"))return;let e=this.getAttribute("src");e&&(this.__initSrc=e,e=new URL(e,location.href,e).href,agent(e,{element:this}))}attributeChangedCallback(e,t,s){"src"===e?s&&null===t?this._init():this.__initSrc&&t&&s!==this.__initSrc&&(console.warn(`${this.tagName.toLowerCase()} change src is invalid, only the first change will be loaded`),this.setAttribute("src",this.__initSrc)):"pause"===e&&null===s&&this._init()}static get observedAttributes(){return["src","pause"]}}class LM extends LoadModule{constructor(...e){super(...e)}}customElements.define("load-module",LoadModule),customElements.define("l-m",LM),"undefined"!=typeof window&&(window.lm=lm);export{lm as default};